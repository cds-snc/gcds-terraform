name: "Terraform plan production"

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "terragrunt/**"
      - ".github/workflows/terraform-plan-production.yml"

env:
  AWS_REGION: ca-central-1
  TERRAFORM_VERSION: 1.6.1
  TERRAGRUNT_VERSION: 0.52.1
  TF_VAR_gh_access_token: ${{ secrets.GH_ACCESS_TOKEN }}
  TF_VAR_api_config: ${{ secrets.API_CONFIG }}
  TF_VAR_slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}


permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terraform-plan:
    strategy:
      fail-fast: false
      matrix:
        include:
          - module: cdn
          - module: route53
          - module: api
          - module: website

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: arn:aws:iam::307395567143:role/gcds-terraform-plan
          role-session-name: TFPlan
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform plan
        uses: cds-snc/terraform-plan@4719878d72d1b0078e0bce2e7571e854e79903b8 # v3.2.2
        with:
          comment-delete: true
          comment-title: "Production: ${{ matrix.module }}"
          directory: ./terragrunt/env/production/${{ matrix.module }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          terragrunt: true
