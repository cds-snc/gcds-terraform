name: "Terraform apply production"

on:
  push:
    branches:
      - main
    paths:
      - "terragrunt/**"
      - ".github/workflows/terraform-apply-production.yml"

env:
  AWS_REGION: ca-central-1
  TERRAFORM_VERSION: 1.6.1
  TERRAGRUNT_VERSION: 0.52.1
  TF_VAR_gh_access_token: ${{ secrets.GH_ACCESS_TOKEN }}
  TF_VAR_api_config: ${{ secrets.API_CONFIG }}
  TF_VAR_slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}


permissions:
  id-token: write
  contents: read

jobs:
  terragrunt-apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: arn:aws:iam::307395567143:role/gcds-terraform-apply
          role-session-name: TFPlan
          aws-region: ${{ env.AWS_REGION }}

      - name: Apply route53
        working-directory: terragrunt/env/production/route53
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply CDN
        working-directory: terragrunt/env/production/cdn
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply API
        working-directory: terragrunt/env/production/api
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply website
        working-directory: terragrunt/env/production/website
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Slack message on failure
        if: failure()
        run: |
          json='{"blocks":[{"type":"section","text":{"type":"mrkdwn","text":":red: GitHub workflow failed: <https://github.com/cds-snc/gcds-terraform/actions/workflows/terraform-apply-production.yml|Terraform apply production>"}}]}'
          curl -X POST -H 'Content-type: application/json' --data "$json" ${{ secrets.SLACK_WEBHOOK_OPS }}  